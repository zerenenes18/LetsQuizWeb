@model QuizContentModel
<link rel="stylesheet" href="styles.css">
<style>
    .card {
        margin-top: 80px !important;
    }

    #question-card h5 {
        text-align: center;
        font-size: 1.8rem; 
        font-weight: bold;
    }
    .question-image {
     
        max-height: 350px;  
        object-fit: contain;  
        margin: 0 auto; /
        display: block; 
    }
    #timer-bar-container {
        height: 10px;
        background-color: #e9ecef;
        width: 100%;
        position: relative;
        margin-top: 20px;
        border-radius: 5px;
        overflow: hidden;
    }

    #timer-bar {
        height: 100%;
        background-color: #28a745;
        width: 100%;
        transition: width 1s linear;
    }

    /* Pulse animasyonu */
    @@keyframes pulse {
        0% {
            background-color: #dc3545;
        }
        50% {
            background-color: #ff6f61;
        }
        100% {
            background-color: #dc3545;
        }
    }

    #timer-bar.pulse {
        animation: pulse 1s infinite;
    }

    .form-check-label {
        font-size: 1.2rem; 
        font-weight: 500;
        margin-left: 10px;
    }

    .form-check {
        margin-bottom: 15px; 
    }

    .form-check-input {
        transform: scale(1.3); 
    }
</style>

<div class="container mt-5">
    <div id="quiz-container">

    </div>

    <div id="finish-card" class="card shadow-lg d-none text-center">
        <div class="card-body">
            <h3 class="text-success">Quiz Completed!</h3>
            <p>Thanks for completing the quiz. Your results will be submitted.</p>
            <button id="finish-quiz-btn" class="btn btn-primary">Finish Quiz</button>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    $(document).ready(function () {
        const quizContent = @Html.Raw(Json.Serialize(Model));
        let currentQuestionIndex = 0;
        let results = [];
        let timerInterval;

      
        Swal.fire({
            title: 'If you exit the quiz, you will not be able to re-enter.',
            text: 'Good luck!',
            icon: 'warning',
            icon: 'info',
            showCancelButton: true,
            confirmButtonText: 'Start',
            cancelButtonText: 'Cancel',
        }).then((result) => {
            if (result.isConfirmed) {
                
                $.ajax({
                    url: '/User/QuizStart',
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + localStorage.getItem('authToken'),
                    },
                    contentType: 'application/json',
                    data: JSON.stringify({ QuizId: quizContent.quizId }),
                    success: function () {
                        renderQuestion(currentQuestionIndex);
                    },
                    error: function (xhr, status, error) {
                        Swal.fire('Error', `Failed to start quiz! ${xhr.responseText || error}`, 'error');
                    },
                });
            } else {
             
                window.location.href = '/Home/Index';
            }
        });

        function renderQuestion(index) {
            const question = quizContent.questions[index];
            const totalSeconds = question.questionSecondTime;
            let remainingSeconds = totalSeconds;

            console.log("Rendering question:", question);
            const questionCard = `
                <div class="card shadow-lg mb-4" id="question-card">
                    <div class="card-body">
                        <h5>${question.questionText}</h5>
                        ${question.questionImagePath ? `
                            <img src="${question.questionImagePath}" 
                                 class="img-fluid rounded mb-3 question-image" 
                                 alt="Question Image">`
                            : ''}
                        <p><strong>Score:</strong> ${question.questionScore}</p>
                        <div id="timer-bar-container">
                            <div id="timer-bar"></div>
                        </div>
                        <div id="options" class="mt-3">
                            ${question.options.map(option => `
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="option" id="option-${option.optionId}" value="${option.optionId}" data-is-true="${option.isTrue}">
                                    <label class="form-check-label" for="option-${option.optionId}">${option.optionText}</label>
                                </div>
                            `).join('')}
                        </div>
                        <button id="next-btn" class="btn btn-primary mt-4" disabled>Next</button>
                    </div>
                </div>
            `;

            $('#quiz-container').html(questionCard);

            // Timer
            const timerBar = $('#timer-bar');
            clearInterval(timerInterval);
            timerInterval = setInterval(() => {
                remainingSeconds--;
                const percentage = (remainingSeconds / totalSeconds) * 100;
                timerBar.css('width', `${percentage}%`);

                if (remainingSeconds <= 5) {
                    timerBar.addClass('pulse');
                }

                if (remainingSeconds <= -1) {
                    clearInterval(timerInterval);
                    const selectedOption = $('input[name="option"]:checked');
                    const isTimeout = true;
                    processAnswer(
                        index,
                        totalSeconds,
                        isTimeout,
                        selectedOption.length > 0 ? selectedOption.data('is-true') : false
                    );
                }
            }, 1000);

            setTimeout(() => {
                $('#next-btn').prop('disabled', false);
            }, 1500);

            $('#next-btn').click(function () {
                clearInterval(timerInterval);
                const selectedOption = $('input[name="option"]:checked');
                processAnswer(
                    index,
                    totalSeconds - remainingSeconds,
                    false,
                    selectedOption.length > 0 ? selectedOption.data('is-true') : false
                );
            });
        }

        function processAnswer(index, timeTaken, isTimeout) {
            const question = quizContent.questions[index];
            const selectedOption = $('input[name="option"]:checked');
            const isTrue = selectedOption.length > 0 ? selectedOption.data('is-true') || false : false;
            const quizId = quizContent.quizId;

            let score = 0;
            if (isTrue) {
                score = (1 - (timeTaken / question.questionSecondTime)) * question.questionScore / 2 + question.questionScore / 2;
            }

            const defaultOptionId = "00000000-0000-0000-0000-000000000000";

            results.push({
                QuestionId: question.questionId,
                Time: timeTaken,
                Score: score,
                IsTrue: isTrue,
                QuizId: quizId,
                SelectedOptionId: selectedOption.length > 0 ? selectedOption.val() : defaultOptionId
            });

            currentQuestionIndex++;
            if (currentQuestionIndex < quizContent.questions.length) {
                renderQuestion(currentQuestionIndex);
            } else {
                renderFinishCard();
            }
        }

        function renderFinishCard() {
            $('#quiz-container').html('');
            $('#finish-card').removeClass('d-none');

          
            $.ajax({
                url: '/Quiz/FinishQuiz',
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + localStorage.getItem('authToken')
                },
                contentType: 'application/json',
                data: JSON.stringify(results),
                success: function () {
                    Swal.fire('Success', 'Your results have been submitted!', 'success');
                },
                error: function (xhr, status, error) {
                    Swal.fire('Error', `Failed to submit results! ${xhr.responseText || error}`, 'error');
                }
            });

            $('#finish-quiz-btn').click(function () {
                window.location.href = '/Home/Index';
            });
        }
    });
</script>
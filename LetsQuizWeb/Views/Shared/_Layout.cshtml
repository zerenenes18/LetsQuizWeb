<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>@ViewData["Title"] - LetsQuizWeb</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css"/>
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true"/>
    <link rel="stylesheet" href="~/LetsQuizWeb.styles.css" asp-append-version="true"/>
    <style>

        .my-button2 {
            margin-right: 35px;
            background: linear-gradient(135deg, #6a11cb, #2575fc); /* Renk geçişi */
            color: white; /* Yazı rengi */
            font-weight: bold;
            border: none; /* Çerçeve kaldırılır */
            border-radius: 25px; /* Yuvarlatılmış köşeler */
            padding: 10px 20px; /* İç boşluk */
            cursor: pointer; /* İşaretçi değişir */
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Hafif gölge */
            transition: all 0.3s ease; /* Geçiş animasyonu */
        }

        .my-button2:hover {
            background: linear-gradient(135deg, #2575fc, #6a11cb); /* Hover sırasında renk tersine döner */
            box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3); /* Hover sırasında daha belirgin gölge */
            transform: scale(1.05); /* Hover sırasında büyütme efekti */
        }

        .my-button2:active {
            transform: scale(0.95); /* Tıklama sırasında küçültme efekti */
            box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2); /* Tıklama sırasında gölge azalır */
        }

        /* Şeffaf Navbar */
        .navbar {
            background: rgba(255, 255, 255, 0.85); /* Hafif şeffaf beyaz */
            z-index: 10; /* Üstte görünmesi için */
            border-radius: 20px; /* Köşeleri yuvarlat */
            position: fixed; /* Sabit pozisyon */
            top: 0; /* Ekranın üstüne sabitler */
            left: 0;
            margin-top: 10px;
        !important;
            width: 100%; /* Tüm genişliği kapsar */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Hafif gölge efekti */
        }

        .navbar-brand, .nav-link {
            color: #000 !important; /* Metin rengini koyu yap */
            text-decoration: none; /* Altı çizgiyi kaldır */
            transition: color 0.3s ease; /* Renk geçiş efekti */
        }

        /* Navbar Link Hover Durumu */
        .navbar-brand:hover, .nav-link:hover {
            color: #ff6f61 !important; /* Hover durumunda renk değişimi (hoş bir turuncu) */
            text-decoration: none; /* Hover'da altı çizgiyi kaldır */
        }

        /* Alt alan */
        footer {
            z-index: 2;
            text-align: center;
            background: rgba(0, 0, 0, 0.4); /* Yarı şeffaf arka plan */
            color: white;
            height: 65px;
            bottom: 0;
            padding-top: 10px;
            display: flex; /* Flexbox etkinleştirildi */
            align-items: center; /* Dikey hizalama */
            justify-content: center; /* Yatay hizalama */
        }

        /* Arka plan video ayarları */
        #background-video {
            position: fixed;
            right: 0;
            bottom: 0;
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            z-index: -100; /* İçerik üzerinde görünmemesi için */
            background-size: cover;
        }

        button {
            border-radius: 10px !important;
        }

        .my-button-login, .my-button-logout {
            margin-left: 20px;
        !important;

        }

        .my-button-logout {
            background: linear-gradient(45deg, #ff7f50, #ffa07a);
        }

        .my-button-login {
            background-color: #4caf50;
        }

        .my-button {
            margin-right: 15px;
            background: linear-gradient(45deg, #6c63ff, #57c1eb);
        }

        /* Hover durumunda renk beyaz olsun */
        .my-button:hover, .my-button-login:hover, .my-button-logout:hover {
            color: white !important;
        }
    </style>

</head>

<body>
<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm border-bottom mb-3">
        <div class="container-fluid">
            <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">LetsQuizWeb</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse"
                    aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                    </li>

                </ul>
                <ul class="navbar-nav">
                    <!-- Login/Logout Button -->
                    <li class="nav-item">
                        <button id="Btn" class="nav-link text-dark my-button" onclick="goToSource()">GitHub</button>
                    </li>
                </ul>

                <ul class="navbar-nav">
                    <!-- Login/Logout Button -->
                    <li class="nav-item">
                        <button id="Btn" class="nav-link text-dark my-button" onclick="goToQuiz()">My Quizzes</button>
                    </li>
                </ul>

                <ul class="navbar-nav">
                    <!-- Login/Logout Button -->
                    <li class="nav-item">
                        <button id="loginBtn" class="nav-link  text-dark  my-button-login" onclick="handleLogin()">Log
                            in
                        </button>
                        <button id="logoutBtn" class="nav-link my-button-logout text-dark" onclick="handleLogout()"
                                style="display: none;">Log out
                        </button>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>
<div class="container">
    <video id="background-video" autoplay muted loop>
        <source src="/Videos/Shared.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
    <div id="renderBody" style="display: none;">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

</div>

<footer class="border-top footer text-muted">
    <p>&copy; 2024 LetsQuiz - All Rights Reserved</p>
</footer>
<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>


    // Uygulama yüklendiğinde veya belirli bir olayda kontrol edin
    // Beyaz liste URL'leri
    const whiteListedPaths = [
        "/Login/ForgotPassword",
        "/Login/Index",
        "/Auth/Register",
        "/Auth/Verification"
    ];

    // Kullanıcının bulunduğu yol
    const currentPath = window.location.pathname;

    if (whiteListedPaths.includes(currentPath)) {
        document.querySelector("#renderBody").style.display = "block";
    }
    document.addEventListener("DOMContentLoaded", () => {
        const authToken = localStorage.getItem("authToken");
        clearExpiredToken();
        // Eğer mevcut yol beyaz listedeyse kontrol yapma
        if (whiteListedPaths.includes(currentPath)) {
            return;
        }

        if (!authToken) {
            // Tatlı bir uyarı pop-up'ı göster ve yönlendir
            Swal.fire({
                title: 'Session Expired',
                text: 'Please log in to continue.',
                icon: 'info',
                showCancelButton: false,
                confirmButtonText: 'Log In',
                allowOutsideClick: false,
                allowEscapeKey: false
            }).then(() => {
                window.location.href = '/Login/Index';
            });
        } else {
            // Eğer token varsa, renderBody'nin görünmesini sağla
            document.querySelector("#renderBody").style.display = "block";
        }
    });

    $.ajaxSetup({
        beforeSend: function (xhr) {
            const token = localStorage.getItem('authToken'); // Token'i localStorage'dan al
            if (token) {
                xhr.setRequestHeader('Authorization', 'Bearer ' + token); // Authorization başlığı ekle
            } else if (!whiteListedPaths.includes(currentPath)) {
                // Eğer token yoksa ve beyaz listede değilse uyarı göster
                Swal.fire({
                    title: 'Session Expired',
                    text: 'Please log in to continue.',
                    icon: 'info',
                    showCancelButton: false,
                    confirmButtonText: 'Log In',
                    allowOutsideClick: false,
                    allowEscapeKey: false
                }).then(() => {
                    window.location.href = '/Login/Index'; // Login sayfasına yönlendir
                });
                return false; // İsteği iptal et
            }
        }
    });

    function isTokenExpired(token) {
        if (!token) return true; // Token yoksa, süresi dolmuş kabul edilir.

        const payloadBase64 = token.split('.')[1]; // JWT'nin payload kısmı
        const payload = JSON.parse(atob(payloadBase64)); // Base64 çözülerek JSON olarak okunur
        const expiration = payload.exp; // `exp` alanı okunur

        const now = Math.floor(Date.now() / 1000); // Şu anki zaman (saniye cinsinden)
        return now > expiration; // Şu anki zaman expiration'dan büyükse token süresi dolmuş demektir
    }

    function clearExpiredToken() {
        const token = localStorage.getItem('authToken'); // Token'i al
        if (isTokenExpired(token)) {
            localStorage.removeItem('authToken'); // Token'i sil
            if (whiteListedPaths.includes(currentPath)) {
                return;
            }
            window.location.href = '/Login/Index';
        }
    }


    // Navbar'daki butonları kontrol et
    document.addEventListener("DOMContentLoaded", () => {
        const loginBtn = document.getElementById("loginBtn");
        const logoutBtn = document.getElementById("logoutBtn");

        // localStorage'daki auth token'i kontrol et
        const authToken = localStorage.getItem("authToken");

        if (authToken) {
            // Eğer token varsa, logout butonunu göster
            loginBtn.style.display = "none";
            logoutBtn.style.display = "inline-block";
        } else {
            // Eğer token yoksa, login butonunu göster
            loginBtn.style.display = "inline-block";
            logoutBtn.style.display = "none";
        }
    });

    // Login Butonuna Basıldığında
    function handleLogin() {
        window.location.href = "/Login/Index"; // Giriş sayfasına yönlendirme
    }

    // Logout Butonuna Basıldığında
    function handleLogout() {
        localStorage.removeItem("authToken"); // Auth token'i sil
        window.location.reload(); // Sayfayı yenile
    }

    function goToQuestion() {
        window.location.href = "/Question/Index"; // Question/Index sayfasına yönlendir
    }

    function goToQuiz() {
        window.location.href = "/Quiz/Index"; // Quiz/Index sayfasına yönlendir
    }

    function goToSource() {
        window.location.href = "https://github.com/zerenenes18/LetsQuizWeb"; // GitHub linkine yönlendir
    }

</script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="~/js/site.js" asp-append-version="true"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>

